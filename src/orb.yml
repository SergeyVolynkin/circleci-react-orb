version: "2.1"
description: "Production ready workflow for testing and building React.js applications"

examples:
  test-and-coverage-on-push:
    description: Run tests and generate coverage report on every push
    usage:
      version: 2.1
      orbs:
        react: thefrontside/react@0.0.5
      workflows:
        push:
          jobs:
            - react/checkout-and-install
            - react/eslint:
                requires:
                  - react/checkout-and-install
            - react/stylelint:
                requires:
                  - react/checkout-and-install
            - react/test:
                requires:
                  - react/checkout-and-install
            - react/coverage:
                requires:
                  - react/checkout-and-install

executors:
  default:
    parameters:
      node:
        type: string
        default: "10"
    docker:
      - image: circleci/node:<<parameters.node>>

commands:
  install:
    description: "Install dependencies"
    steps:
      - run: yarn install

  eslint:
    description: "Lint JS"
    steps:
      - run: yarn eslint
          --max-warnings=0
          --format junit
          --output-file ./artifacts/eslint/eslint.xml

  stylelint:
    description: "Lint style files"
    steps:
      - run: yarn --silent stylelint
          --custom-formatter './node_modules/stylelint-junit-formatter' > ./artifacts/stylelint/stylelint.xml

  build:
    description: "Create a production build"
    steps:
      - run: NODE_ENV=production yarn build

  test:
    description: "Run tests using Jest"
    steps:
      - run: yarn test

  coverage:
    description: "Generate coverage report using Jest and Istanbul"
    steps:
      - run: yarn test
          --collectCoverage
          --coverageDirectory=./artifacts/coverage

jobs:
  checkout-and-install:
    executor: default
    steps:
      - checkout
      - restore_cache:
          key: v1-node-modules-{{ checksum "yarn.lock" }}
      - install
      - persist_to_workspace:
          root: ~/
          paths: project
      - save_cache:
          key: v1-node-modules-{{ checksum "yarn.lock" }}
          paths:
            - ~/project/node_modules

  eslint:
    executor: default
    steps:
      - attach_workspace:
          at: ~/
      - eslint
      - store_test_results:
          path: ./artifacts
      - store_artifacts:
          path: ./artifacts

  stylelint:
    executor: default
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Set up artifacts directory
          command: mkdir -p artifacts/stylelint
      - stylelint
      - store_test_results:
          path: ./artifacts
      - store_artifacts:
          path: ./artifacts

  test:
    executor: default
    steps:
      - attach_workspace:
          at: ~/
      - test

  build:
    executor: default
    steps:
      - attach_workspace:
          at: ~/
      - build

  coverage:
    executor: default
    steps:
      - attach_workspace:
          at: ~/
      - coverage
      - store_artifacts:
          path: ./artifacts
